<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.kingoin.king.modular.biz.dao.CategoryMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap"
		type="com.kingoin.king.modular.biz.model.Category">
		<id column="id" property="id" />
		<result column="pid" property="pid" />
		<result column="pname" property="pname" />
		<result column="name" property="name" />
		<result column="icon" property="icon" />
		<result column="level" property="level" />
		<result column="num" property="num" />
		<result column="status" property="status" />
		<result column="status_str" property="statusStr" />
		<result column="remark" property="remark" />
		<result column="type" property="type" />
		<result column="date_add" property="dateAdd" />
		<result column="add_user" property="addUser" />
		<result column="date_update" property="dateUpdate" />
		<result column="update_user" property="updateUser" />
	</resultMap>

	<sql id="Base_Column_List">
		id, pid,pname, name, icon , level,num, status,
		status_str statusStr, remark,type,date_add dateAdd,add_user addUser,
		date_update
		dateUpdate,update_user updateUser
	</sql>
	<!-- 查询所有一级层级 -->
	<select id="selectCategory" resultType="map"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from biz_category
		where status =1
		<if test="name != null and name != ''">
			and name like CONCAT('%',#{name},'%') or pname like
			CONCAT('%',#{name},'%')
		</if>
		order by level
	</select>
	<select id="selectCategoryLevels" resultType="map">
		select
		<include refid="Base_Column_List" />
		from biz_category
		where status =1 and level = 1

	</select>
	<!-- 根据pid 查询 -->
	<select id="selectCategoryByPid"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from biz_category
		where status =1 and pid = #{pid}
	</select>

</mapper>
